<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HDG_MyBusinessUnits</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HDG_MyBusinessUnits extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>xds</Name>
				<Source><![CDATA[
    public RefreshFrequency xds()
    {
        HcmEmployment                       employment;
        HDG_MyBusinessUnits                 myBu;
        utcDateTime                         now = DateTimeUtil::utcNow();

        while select validTimeState(now) DefaultDimension
            from employment
            where employment.Worker == HcmWorkerLookup::currentWorker()
        {
            DimensionAttributeValueSet          DimensionAttributeValueSet;
            DimensionAttributeValueSetItem      DimensionAttributeValueSetItem;
            DimensionAttributeValue             DimensionAttributeValue;
            DimensionAttribute                  DimensionAttribute;
            DimAttributeOMBusinessUnit          businessUnit;

            while select RecId from DimensionAttributeValueSet
                    where  DimensionAttributeValueSet.RecId == employment.DefaultDimension
                join RecId, DisplayValue from DimensionAttributeValueSetItem
                    where DimensionAttributeValueSetItem.DimensionAttributeValueSet == DimensionAttributeValueSet.RecId
                join RecId from DimensionAttributeValue
                    where DimensionAttributeValue.RecId == DimensionAttributeValueSetItem.DimensionAttributeValue
                join RecId, Name from DimensionAttribute
                    where DimensionAttribute.RecId == DimensionAttributeValue.DimensionAttribute
                    && DimensionAttribute.Name == 'BusinessUnit'
                join businessUnit
                    where businessUnit.Key == DimensionAttributeValue.EntityInstance
            {
                myBu.clear();
                myBu.BusinessUnitRecId = businessUnit.Key;
                myBu.OperatingUnitNumber = businessUnit.Value;
                myBu.insert();
            }

        }
        
        return RefreshFrequency::PerSession;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BusinessUnitRecId</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OperatingUnitNumber</Name>
			<ExtendedDataType>OMOperatingUnitNumber</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>